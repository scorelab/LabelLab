// Mocks generated by Mockito 5.0.10 from annotations
// in labellab_mobile/test/teams_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i14;
import 'dart:io' as _i18;

import 'package:labellab_mobile/data/remote/dto/api_response.dart' as _i5;
import 'package:labellab_mobile/data/remote/dto/google_user_request.dart'
    as _i16;
import 'package:labellab_mobile/data/remote/dto/login_response.dart' as _i2;
import 'package:labellab_mobile/data/remote/dto/refresh_response.dart' as _i3;
import 'package:labellab_mobile/data/remote/dto/register_response.dart' as _i4;
import 'package:labellab_mobile/data/remote/labellab_api.dart' as _i13;
import 'package:labellab_mobile/model/auth_user.dart' as _i15;
import 'package:labellab_mobile/model/classification.dart' as _i11;
import 'package:labellab_mobile/model/group.dart' as _i10;
import 'package:labellab_mobile/model/image.dart' as _i9;
import 'package:labellab_mobile/model/label.dart' as _i24;
import 'package:labellab_mobile/model/label_selection.dart' as _i22;
import 'package:labellab_mobile/model/location.dart' as _i23;
import 'package:labellab_mobile/model/log.dart' as _i20;
import 'package:labellab_mobile/model/message.dart' as _i19;
import 'package:labellab_mobile/model/ml_model.dart' as _i12;
import 'package:labellab_mobile/model/project.dart' as _i7;
import 'package:labellab_mobile/model/register_user.dart' as _i17;
import 'package:labellab_mobile/model/team.dart' as _i8;
import 'package:labellab_mobile/model/upload_image.dart' as _i21;
import 'package:labellab_mobile/model/user.dart' as _i6;
import 'package:labellab_mobile/screen/train/dialogs/dto/model_dto.dart'
    as _i25;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeLoginResponse extends _i1.Fake implements _i2.LoginResponse {}

class _FakeRefreshResponse extends _i1.Fake implements _i3.RefreshResponse {}

class _FakeRegisterResponse extends _i1.Fake implements _i4.RegisterResponse {}

class _FakeApiResponse extends _i1.Fake implements _i5.ApiResponse {}

class _FakeUser extends _i1.Fake implements _i6.User {}

class _FakeProject extends _i1.Fake implements _i7.Project {}

class _FakeTeam extends _i1.Fake implements _i8.Team {}

class _FakeImage extends _i1.Fake implements _i9.Image {}

class _FakeGroup extends _i1.Fake implements _i10.Group {}

class _FakeClassification extends _i1.Fake implements _i11.Classification {}

class _FakeMlModel extends _i1.Fake implements _i12.MlModel {}

/// A class which mocks [LabelLabAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockLabelLabAPI extends _i1.Mock implements _i13.LabelLabAPI {
  MockLabelLabAPI() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.Future<_i2.LoginResponse> login(_i15.AuthUser? user) =>
      (super.noSuchMethod(Invocation.method(#login, [user]),
              returnValue:
                  Future<_i2.LoginResponse>.value(_FakeLoginResponse()))
          as _i14.Future<_i2.LoginResponse>);
  @override
  _i14.Future<_i3.RefreshResponse> refreshToken(String? refreshToken) =>
      (super.noSuchMethod(Invocation.method(#refreshToken, [refreshToken]),
              returnValue:
                  Future<_i3.RefreshResponse>.value(_FakeRefreshResponse()))
          as _i14.Future<_i3.RefreshResponse>);
  @override
  _i14.Future<_i2.LoginResponse> loginWithGoogle(
          _i16.GoogleUserRequest? user) =>
      (super.noSuchMethod(Invocation.method(#loginWithGoogle, [user]),
              returnValue:
                  Future<_i2.LoginResponse>.value(_FakeLoginResponse()))
          as _i14.Future<_i2.LoginResponse>);
  @override
  _i14.Future<_i2.LoginResponse> loginWithGithub(String? code) =>
      (super.noSuchMethod(Invocation.method(#loginWithGithub, [code]),
              returnValue:
                  Future<_i2.LoginResponse>.value(_FakeLoginResponse()))
          as _i14.Future<_i2.LoginResponse>);
  @override
  _i14.Future<_i4.RegisterResponse> register(_i17.RegisterUser? user) =>
      (super.noSuchMethod(Invocation.method(#register, [user]),
              returnValue:
                  Future<_i4.RegisterResponse>.value(_FakeRegisterResponse()))
          as _i14.Future<_i4.RegisterResponse>);
  @override
  _i14.Future<_i5.ApiResponse> updatePassword(
          String? token, String? currentPassword, String? newPassword) =>
      (super.noSuchMethod(
              Invocation.method(
                  #updatePassword, [token, currentPassword, newPassword]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i6.User> usersInfo(String? token) =>
      (super.noSuchMethod(Invocation.method(#usersInfo, [token]),
              returnValue: Future<_i6.User>.value(_FakeUser()))
          as _i14.Future<_i6.User>);
  @override
  _i14.Future<List<_i6.User>> searchUser(String? token, String? email) =>
      (super.noSuchMethod(Invocation.method(#searchUser, [token, email]),
              returnValue: Future<List<_i6.User>>.value(<_i6.User>[]))
          as _i14.Future<List<_i6.User>>);
  @override
  _i14.Future<_i5.ApiResponse> uploadUserImage(
          String? token, _i18.File? image) =>
      (super.noSuchMethod(Invocation.method(#uploadUserImage, [token, image]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> editInfo(String? token, String? username) =>
      (super.noSuchMethod(Invocation.method(#editInfo, [token, username]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<List<_i7.Project>> getProjects(String? token) =>
      (super.noSuchMethod(Invocation.method(#getProjects, [token]),
              returnValue: Future<List<_i7.Project>>.value(<_i7.Project>[]))
          as _i14.Future<List<_i7.Project>>);
  @override
  _i14.Future<_i7.Project> getProject(String? token, String? id) =>
      (super.noSuchMethod(Invocation.method(#getProject, [token, id]),
              returnValue: Future<_i7.Project>.value(_FakeProject()))
          as _i14.Future<_i7.Project>);
  @override
  _i14.Future<_i5.ApiResponse> createProject(
          String? token, _i7.Project? project) =>
      (super.noSuchMethod(Invocation.method(#createProject, [token, project]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> updateProject(
          String? token, _i7.Project? project) =>
      (super.noSuchMethod(Invocation.method(#updateProject, [token, project]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> deleteProject(String? token, String? id) =>
      (super.noSuchMethod(Invocation.method(#deleteProject, [token, id]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> addMember(String? token, String? projectId,
          String? email, String? teamname, String? role) =>
      (super.noSuchMethod(
              Invocation.method(
                  #addMember, [token, projectId, email, teamname, role]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> removeMember(
          String? token, String? projectId, String? email) =>
      (super.noSuchMethod(
              Invocation.method(#removeMember, [token, projectId, email]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<List<String>> getMemberRoles(String? token, String? projectId) =>
      (super.noSuchMethod(
              Invocation.method(#getMemberRoles, [token, projectId]),
              returnValue: Future<List<String>>.value(<String>[]))
          as _i14.Future<List<String>>);
  @override
  _i14.Future<_i5.ApiResponse> leaveProject(String? token, String? projectId) =>
      (super.noSuchMethod(Invocation.method(#leaveProject, [token, projectId]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> makeAdmin(
          String? token, String? projectId, String? memberEmail) =>
      (super.noSuchMethod(
              Invocation.method(#makeAdmin, [token, projectId, memberEmail]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> removeAdmin(
          String? token, String? projectId, String? memberEmail) =>
      (super.noSuchMethod(
              Invocation.method(#removeAdmin, [token, projectId, memberEmail]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> createTeam(
          String? token, String? projectId, Map<String, dynamic>? postData) =>
      (super.noSuchMethod(
              Invocation.method(#createTeam, [token, projectId, postData]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> updateTeam(String? token, String? projectId,
          String? teamId, String? teamName, String? role) =>
      (super.noSuchMethod(
              Invocation.method(
                  #updateTeam, [token, projectId, teamId, teamName, role]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> deleteTeam(
          String? token, String? projectId, String? teamId) =>
      (super.noSuchMethod(
              Invocation.method(#deleteTeam, [token, projectId, teamId]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i8.Team> getTeamDetails(
          String? token, String? projectId, String? teamId) =>
      (super.noSuchMethod(
              Invocation.method(#getTeamDetails, [token, projectId, teamId]),
              returnValue: Future<_i8.Team>.value(_FakeTeam()))
          as _i14.Future<_i8.Team>);
  @override
  _i14.Future<_i5.ApiResponse> addTeamMember(String? token, String? projectId,
          String? teamId, String? memberEmail) =>
      (super.noSuchMethod(
              Invocation.method(
                  #addTeamMember, [token, projectId, teamId, memberEmail]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> removeTeamMember(String? token,
          String? projectId, String? teamId, String? memberEmail) =>
      (super.noSuchMethod(
              Invocation.method(
                  #removeTeamMember, [token, projectId, teamId, memberEmail]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<List<_i19.Message>> getChatroomMessages(
          String? token, String? teamId) =>
      (super.noSuchMethod(
              Invocation.method(#getChatroomMessages, [token, teamId]),
              returnValue: Future<List<_i19.Message>>.value(<_i19.Message>[]))
          as _i14.Future<List<_i19.Message>>);
  @override
  _i14.Future<List<_i20.Log>> getProjectActivityLogs(
          String? token, String? projectId) =>
      (super.noSuchMethod(
              Invocation.method(#getProjectActivityLogs, [token, projectId]),
              returnValue: Future<List<_i20.Log>>.value(<_i20.Log>[]))
          as _i14.Future<List<_i20.Log>>);
  @override
  _i14.Future<List<_i20.Log>> getCategorySpecificLogs(
          String? token, String? projectId, String? category) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getCategorySpecificLogs, [token, projectId, category]),
              returnValue: Future<List<_i20.Log>>.value(<_i20.Log>[]))
          as _i14.Future<List<_i20.Log>>);
  @override
  _i14.Future<List<_i20.Log>> getMemberSpecificLogs(
          String? token, String? projectId, String? userEmail) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getMemberSpecificLogs, [token, projectId, userEmail]),
              returnValue: Future<List<_i20.Log>>.value(<_i20.Log>[]))
          as _i14.Future<List<_i20.Log>>);
  @override
  _i14.Future<List<_i20.Log>> getEntitySpecificLogs(String? token,
          String? projectId, String? entityType, String? entityId) =>
      (super.noSuchMethod(
              Invocation.method(#getEntitySpecificLogs,
                  [token, projectId, entityType, entityId]),
              returnValue: Future<List<_i20.Log>>.value(<_i20.Log>[]))
          as _i14.Future<List<_i20.Log>>);
  @override
  _i14.Future<_i5.ApiResponse> uploadImage(
          String? token, String? projectId, _i21.UploadImage? image) =>
      (super.noSuchMethod(
              Invocation.method(#uploadImage, [token, projectId, image]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<List<_i9.Image>> getImages(String? token, String? projectId) =>
      (super.noSuchMethod(Invocation.method(#getImages, [token, projectId]),
              returnValue: Future<List<_i9.Image>>.value(<_i9.Image>[]))
          as _i14.Future<List<_i9.Image>>);
  @override
  _i14.Future<_i9.Image> getImage(String? token, String? imageId) =>
      (super.noSuchMethod(Invocation.method(#getImage, [token, imageId]),
              returnValue: Future<_i9.Image>.value(_FakeImage()))
          as _i14.Future<_i9.Image>);
  @override
  _i14.Future<_i5.ApiResponse> updateImage(String? token, String? projectId,
          _i9.Image? image, List<_i22.LabelSelection?>? selections) =>
      (super.noSuchMethod(
              Invocation.method(
                  #updateImage, [token, projectId, image, selections]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> deleteImage(
          String? token, String? projectId, String? imageId) =>
      (super.noSuchMethod(
              Invocation.method(#deleteImage, [token, projectId, imageId]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> deleteImages(
          String? token, String? projectId, List<String?>? imageIds) =>
      (super.noSuchMethod(
              Invocation.method(#deleteImages, [token, projectId, imageIds]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<List<_i23.Location>> getImagesPath(
          String? token, String? projectId, List<String?>? ids) =>
      (super.noSuchMethod(
              Invocation.method(#getImagesPath, [token, projectId, ids]),
              returnValue: Future<List<_i23.Location>>.value(<_i23.Location>[]))
          as _i14.Future<List<_i23.Location>>);
  @override
  _i14.Future<_i5.ApiResponse> createGroup(
          String? token, String? projectId, _i10.Group? group) =>
      (super.noSuchMethod(
              Invocation.method(#createGroup, [token, projectId, group]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> addGroupImages(String? token, String? projectId,
          String? groupId, List<String?>? images) =>
      (super.noSuchMethod(
              Invocation.method(
                  #addGroupImages, [token, projectId, groupId, images]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> updateGroup(String? token, _i10.Group? group) =>
      (super.noSuchMethod(Invocation.method(#updateGroup, [token, group]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i10.Group> getGroup(String? token, String? groupId) =>
      (super.noSuchMethod(Invocation.method(#getGroup, [token, groupId]),
              returnValue: Future<_i10.Group>.value(_FakeGroup()))
          as _i14.Future<_i10.Group>);
  @override
  _i14.Future<List<_i24.Label>> getLabels(String? token, String? projectId) =>
      (super.noSuchMethod(Invocation.method(#getLabels, [token, projectId]),
              returnValue: Future<List<_i24.Label>>.value(<_i24.Label>[]))
          as _i14.Future<List<_i24.Label>>);
  @override
  _i14.Future<_i5.ApiResponse> createLabel(
          String? token, String? projectId, _i24.Label? label) =>
      (super.noSuchMethod(
              Invocation.method(#createLabel, [token, projectId, label]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> updateLabel(
          String? token, String? projectId, _i24.Label? label) =>
      (super.noSuchMethod(
              Invocation.method(#updateLabel, [token, projectId, label]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> deleteLabel(
          String? token, String? projectId, String? labelId) =>
      (super.noSuchMethod(
              Invocation.method(#deleteLabel, [token, projectId, labelId]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i11.Classification> classify(String? token, _i18.File? image) =>
      (super.noSuchMethod(Invocation.method(#classify, [token, image]),
              returnValue:
                  Future<_i11.Classification>.value(_FakeClassification()))
          as _i14.Future<_i11.Classification>);
  @override
  _i14.Future<List<_i11.Classification>> getClassifications(String? token) =>
      (super.noSuchMethod(Invocation.method(#getClassifications, [token]),
              returnValue: Future<List<_i11.Classification>>.value(
                  <_i11.Classification>[]))
          as _i14.Future<List<_i11.Classification>>);
  @override
  _i14.Future<_i11.Classification> getClassification(
          String? token, String? id) =>
      (super.noSuchMethod(Invocation.method(#getClassification, [token, id]),
              returnValue:
                  Future<_i11.Classification>.value(_FakeClassification()))
          as _i14.Future<_i11.Classification>);
  @override
  _i14.Future<_i5.ApiResponse> deleteClassification(
          String? token, String? id) =>
      (super.noSuchMethod(Invocation.method(#deleteClassification, [token, id]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<List<_i12.MlModel>> getModels(String? token, String? projectId) =>
      (super.noSuchMethod(Invocation.method(#getModels, [token, projectId]),
              returnValue: Future<List<_i12.MlModel>>.value(<_i12.MlModel>[]))
          as _i14.Future<List<_i12.MlModel>>);
  @override
  _i14.Future<_i12.MlModel> getModel(String? token, String? modelId) =>
      (super.noSuchMethod(Invocation.method(#getModel, [token, modelId]),
              returnValue: Future<_i12.MlModel>.value(_FakeMlModel()))
          as _i14.Future<_i12.MlModel>);
  @override
  _i14.Future<List<_i12.MlModel>> getTrainedModels(
          String? token, String? projectId) =>
      (super.noSuchMethod(
              Invocation.method(#getTrainedModels, [token, projectId]),
              returnValue: Future<List<_i12.MlModel>>.value(<_i12.MlModel>[]))
          as _i14.Future<List<_i12.MlModel>>);
  @override
  _i14.Future<_i5.ApiResponse> createModel(
          String? token, String? projectId, _i12.MlModel? model) =>
      (super.noSuchMethod(
              Invocation.method(#createModel, [token, projectId, model]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> updateModel(
          String? token, String? projectId, _i12.MlModel? model) =>
      (super.noSuchMethod(
              Invocation.method(#updateModel, [token, projectId, model]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> saveModel(String? token, String? modelId,
          _i12.MlModel? model, _i25.ModelDto? modelDto) =>
      (super.noSuchMethod(
              Invocation.method(#saveModel, [token, modelId, model, modelDto]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> trainModel(String? token, String? modelId) =>
      (super.noSuchMethod(Invocation.method(#trainModel, [token, modelId]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
  @override
  _i14.Future<_i5.ApiResponse> deleteModel(String? token, String? modelId) =>
      (super.noSuchMethod(Invocation.method(#deleteModel, [token, modelId]),
              returnValue: Future<_i5.ApiResponse>.value(_FakeApiResponse()))
          as _i14.Future<_i5.ApiResponse>);
}
